{"version":3,"sources":["common/components/empty/Empty.module.scss","components/main/repositories/Repositories.module.scss","components/main/repositories/repository/Repository.module.scss","components/header/Header.module.scss","components/main/Main.module.scss","common/components/Loader/Loader.module.scss","assets/icons/github.svg","API/api.ts","Redux/reducer.ts","components/header/Header.tsx","components/main/user/User.tsx","components/main/repositories/repository/Repository.tsx","common/components/empty/Empty.tsx","assets/icons/notFound.svg","common/components/Pagination/Pagination.tsx","common/components/Loader/Loader.tsx","Redux/selectors.ts","components/main/repositories/Repositories.tsx","assets/icons/bigSearch.svg","assets/icons/userOutline.svg","components/main/Main.tsx","App.tsx","reportWebVitals.ts","Redux/store.ts","index.tsx","components/main/user/User.module.scss","common/components/Pagination/Pagination.module.scss"],"names":["module","exports","instance","axios","create","baseURL","repoAPI","username","get","then","res","data","currentPage","perPage","SET_ERROR","ADD_USER","ADD_REPOS","SET_IS_FETCHING","SET_CURRENT_PAGE","initialState","isFetching","error","user","repositories","totalReposCount","setUser","userData","type","payload","setRepos","reposData","setCurrentPage","page","setError","value","setIsFetching","getData","userName","dispatch","a","Promise","all","results","reducer","state","action","public_repos","Header","useDispatch","useState","setValue","handleKeyPress","useCallback","e","key","className","style","header","src","githubIcon","alt","onChange","currentTarget","onKeyPress","searchInput","name","placeholder","User","React","memo","props","followers","following","photo","url","currentFollowers","toFixed","toString","userBlock","userPhoto","target","href","userFollow","Repository","description","repoBlock","repoLink","Empty","text","icon","styles","backgroundImage","emptyBlock","container","Pagination","pageCount","onPageHandler","nextButton","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","previousButton","fillRule","clipRule","breakButton","forcePage","marginPagesDisplayed","onPageChange","pageRangeDisplayed","nextLabel","previousLabel","nextClassName","nextBtn","previousClassName","prevBtn","breakLabel","breakClassName","breakBtn","pageClassName","pageBtn","activeClassName","active","containerClassName","paginationContainer","Loader","fetchingContainer","fetching","selectRepos","selectPerPage","selectTotalReposCount","selectCurrentPage","selectIsFetching","selectUser","selectError","Repositories","reposCount","repos","useSelector","Math","ceil","firstItemOfRange","lastItemOfRange","length","item","selected","repositoryBlock","title","map","repo","html_url","id","paginationBlock","notFound","Main","userNotFound","search","mainBlock","avatar_url","login","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba33f360.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"emptyBlock\":\"Empty_emptyBlock__3O7gL\",\"container\":\"Empty_container__3llGH\",\"icon\":\"Empty_icon__E0A3z\",\"text\":\"Empty_text__171RU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repositoryBlock\":\"Repositories_repositoryBlock__iQLp0\",\"title\":\"Repositories_title__fH8jW\",\"paginationBlock\":\"Repositories_paginationBlock__2Xpzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repoBlock\":\"Repository_repoBlock__VPyDo\",\"description\":\"Repository_description__341RE\",\"repoLink\":\"Repository_repoLink__DD3kw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3h6YL\",\"searchInput\":\"Header_searchInput__2tZ-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__1_GKC\",\"mainBlock\":\"Main_mainBlock__CXj58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fetchingContainer\":\"Loader_fetchingContainer__1fC6P\",\"fetching\":\"Loader_fetching__J36ze\",\"spin\":\"Loader_spin__yY_xy\"};","export default __webpack_public_path__ + \"static/media/github.1ee5d17e.svg\";","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.github.com/users'\r\n})\r\n\r\nexport const repoAPI = {\r\n    getUser(username: string) {\r\n        return instance.get<UserType>(`/${username}`)\r\n            .then(res => res.data)\r\n    },\r\n    getRepo(username: string, currentPage: number = 1, perPage: number = 4) {\r\n        return instance.get<Array<RepoType>>(`/${username}/repos?per_page=${perPage}&page=${currentPage}`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\n//types\r\nexport type UserType = {\r\n    login: string\r\n    avatar_url: string\r\n    html_url: string\r\n    name: string\r\n    public_repos: number\r\n    followers: number\r\n    following: number\r\n}\r\nexport type RepoType = {\r\n    id: string\r\n    name: string\r\n    html_url: string\r\n    description: string\r\n}","import {Dispatch} from 'redux';\r\nimport {repoAPI, RepoType, UserType} from '../API/api';\r\n\r\nconst SET_ERROR = 'SET_ERROR';\r\nconst ADD_USER = 'ADD_USER';\r\nconst ADD_REPOS = 'ADD_REPOS'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\n\r\nlet initialState = {\r\n    isFetching: false,\r\n    error: false,\r\n    user: null as UserType | null,\r\n    repositories: [] as Array<RepoType> | [],\r\n    perPage: 4,\r\n    totalReposCount: 0,\r\n    currentPage: 1,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionsTypes =\r\n    ReturnType<typeof setUser>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsFetching>\r\n    | ReturnType<typeof setRepos>\r\n    | ReturnType<typeof setCurrentPage>\r\n\r\n\r\nconst reducer = (state = initialState, action: ActionsTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                totalReposCount: action.payload.public_repos,\r\n            }\r\n        }\r\n        case ADD_REPOS: {\r\n            return {\r\n                ...state,\r\n                repositories: action.payload,\r\n            }\r\n        }\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case SET_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUser = (userData: UserType) => ({type: ADD_USER, payload: userData} as const)\r\nexport const setRepos = (reposData: Array<RepoType>) => ({type: ADD_REPOS, payload: reposData} as const)\r\nexport const setCurrentPage = (page: number) => ({type: SET_CURRENT_PAGE, payload: page} as const)\r\nexport const setError = (value: boolean) => ({type: SET_ERROR, payload: value} as const)\r\nexport const setIsFetching = (value: boolean) => ({type: SET_IS_FETCHING, payload: value} as const)\r\n\r\nexport const getData = (userName: string, currentPage: number = 1, perPage: number = 4) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setError(false))\r\n        dispatch(setIsFetching(true))\r\n        let results = await Promise.all([\r\n            repoAPI.getUser(userName),\r\n            repoAPI.getRepo(userName, currentPage, perPage)\r\n        ])\r\n        dispatch(setUser(results[0]))\r\n        dispatch(setRepos(results[1]))\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(setIsFetching(false))\r\n    } catch (e) {\r\n        dispatch(setError(true))\r\n        dispatch(setIsFetching(false))\r\n    }\r\n}\r\n\r\nexport default reducer","import React, {ChangeEvent, KeyboardEvent, useCallback, useState} from 'react'\r\nimport style from './Header.module.scss'\r\nimport githubIcon from './../../assets/icons/github.svg'\r\nimport {useDispatch} from 'react-redux';\r\nimport {getData, setCurrentPage} from '../../Redux/reducer';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const handleKeyPress = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            dispatch(getData(value))\r\n            dispatch(setCurrentPage(1))\r\n            setValue('')\r\n        }\r\n    }, [value, setValue, dispatch])\r\n\r\n    return (\r\n        <header className={style.header}>\r\n            <img src={githubIcon} alt=\"github\"/>\r\n            <input onChange={onChangeHandler}\r\n                   onKeyPress={handleKeyPress}\r\n                   value={value}\r\n                   className={style.searchInput}\r\n                   type=\"text\"\r\n                   name=\"search\"\r\n                   placeholder=\"Enter GitHub username\"\r\n            />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './User.module.scss'\r\n\r\ntype PropsType = {\r\n    photo: string\r\n    name: string\r\n    userName: string\r\n    followers: number\r\n    following: number\r\n    url: string\r\n}\r\n\r\nconst User: React.FC<PropsType> = React.memo( (props) => {\r\n    const {userName, name, followers, following, photo, url} = props\r\n    const currentFollowers = followers >= 1000 ? (followers/1000).toFixed(1).toString() + 'k' : followers\r\n\r\n    return (\r\n        <div className={style.userBlock}>\r\n            <img className={style.userPhoto} src={photo} alt=\"user\"/>\r\n            <span className={style.name}>{name}</span>\r\n            <a target=\"_blank\" href={url} className={style.userName}>{userName}</a>\r\n            <div className={style.userFollow}>\r\n                <span className={style.followers}>{currentFollowers} followers</span>\r\n                <span className={style.following}>{following} following</span>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default User;","import React from 'react';\r\nimport style from './Repository.module.scss'\r\n\r\ntype PropsType = {\r\n    name: string\r\n    url: string\r\n    description: string\r\n}\r\nconst Repository: React.FC<PropsType> = React.memo((props) => {\r\n    const {name, description, url} = props\r\n    return (\r\n        <div className={style.repoBlock}>\r\n            <a target=\"_blank\" href={url} className={style.repoLink}>{name}</a>\r\n            <span className={style.description}>{description}</span>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Repository;","import React from 'react';\r\nimport style from './Empty.module.scss'\r\n\r\ntype PropsType = {\r\n    text: string\r\n    icon: string\r\n}\r\n\r\nconst Empty: React.FC<PropsType> = ({text, icon}) => {\r\n    const styles = {\r\n        backgroundImage: `url(${icon})`\r\n    }\r\n\r\n    return (\r\n        <div className={style.emptyBlock}>\r\n            <div className={style.container}>\r\n                <span style={styles} className={style.icon}/>\r\n                <span className={style.text}>{text}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Empty;","export default __webpack_public_path__ + \"static/media/notFound.ae252258.svg\";","import React from 'react';\r\nimport style from './Pagination.module.scss'\r\nimport ReactPaginate from 'react-paginate';\r\n\r\ntype PropsType = {\r\n    pageCount: number\r\n    perPage: number\r\n    currentPage: number\r\n    onPageHandler: (item: { selected: number }) => void\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = React.memo(({pageCount, perPage, onPageHandler, currentPage}) => {\r\n    const nextButton = <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M1 1L6 6L1 11\" stroke=\"#808080\" strokeWidth=\"2\"/>\r\n    </svg>\r\n\r\n    const previousButton = <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n              d=\"M3.41412 6.00008L7.70701 1.70718L6.2928 0.292969L0.585693 6.00008L6.2928 11.7072L7.70701 10.293L3.41412 6.00008Z\"\r\n              fill=\"#808080\"/>\r\n    </svg>\r\n\r\n    const breakButton = <svg width=\"11\" height=\"3\" viewBox=\"0 0 11 3\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path\r\n            d=\"M1.128 0.58C0.504 0.58 0.0880001 0.996 0.0880001 1.62C0.0880001 2.244 0.504 2.66 1.128 2.66C1.752 2.66 2.168 2.244 2.168 1.62C2.168 0.996 1.752 0.58 1.128 0.58ZM5.378 0.58C4.754 0.58 4.338 0.996 4.338 1.62C4.338 2.244 4.754 2.66 5.378 2.66C6.002 2.66 6.418 2.244 6.418 1.62C6.418 0.996 6.002 0.58 5.378 0.58ZM9.628 0.58C9.004 0.58 8.588 0.996 8.588 1.62C8.588 2.244 9.004 2.66 9.628 2.66C10.252 2.66 10.668 2.244 10.668 1.62C10.668 0.996 10.252 0.58 9.628 0.58Z\"\r\n            fill=\"#808080\"/>\r\n    </svg>\r\n\r\n    return (\r\n        <ReactPaginate forcePage={currentPage - 1}\r\n                       pageCount={pageCount}\r\n                       marginPagesDisplayed={perPage}\r\n                       onPageChange={onPageHandler}\r\n                       pageRangeDisplayed={1}\r\n                       nextLabel={nextButton}\r\n                       previousLabel={previousButton}\r\n                       nextClassName={style.nextBtn}\r\n                       previousClassName={style.prevBtn}\r\n                       breakLabel={breakButton}\r\n                       breakClassName={style.breakBtn}\r\n                       pageClassName={style.pageBtn}\r\n                       activeClassName={style.active}\r\n                       containerClassName={style.paginationContainer}\r\n        />\r\n    );\r\n})\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport style from './Loader.module.scss'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={style.fetchingContainer}>\r\n            <div className={style.fetching}>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import {AppRootStateType} from './store';\r\n\r\nexport const selectRepos = (state: AppRootStateType) => state.user.repositories\r\nexport const selectPerPage = (state: AppRootStateType) => state.user.perPage\r\nexport const selectTotalReposCount = (state: AppRootStateType) => state.user.totalReposCount\r\nexport const selectCurrentPage = (state: AppRootStateType) => state.user.currentPage\r\nexport const selectIsFetching = (state: AppRootStateType) => state.user.isFetching\r\nexport const selectUser = (state: AppRootStateType) => state.user.user\r\nexport const selectError = (state: AppRootStateType) => state.user.error\r\n","import React, {useCallback} from 'react';\r\nimport style from './Repositories.module.scss'\r\nimport Repository from './repository/Repository';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RepoType} from '../../../API/api';\r\nimport Empty from '../../../common/components/empty/Empty';\r\nimport notFound from './../../../assets/icons/notFound.svg'\r\nimport {getData} from '../../../Redux/reducer';\r\nimport Pagination from '../../../common/components/Pagination/Pagination';\r\nimport Loader from '../../../common/components/Loader/Loader';\r\nimport {\r\n    selectCurrentPage,\r\n    selectIsFetching,\r\n    selectPerPage,\r\n    selectRepos,\r\n    selectTotalReposCount\r\n} from '../../../Redux/selectors';\r\n\r\ntype PropsType = {\r\n    reposCount: number\r\n    userName: string\r\n}\r\n\r\nconst Repositories: React.FC<PropsType> = React.memo(({reposCount, userName}) => {\r\n    const dispatch = useDispatch()\r\n    const repos = useSelector(selectRepos)\r\n    const perPage = useSelector(selectPerPage)\r\n    const totalReposCount = useSelector(selectTotalReposCount)\r\n    const currentPage = useSelector(selectCurrentPage)\r\n    const isFetching = useSelector(selectIsFetching)\r\n\r\n    const pageCount = Math.ceil(totalReposCount / perPage)\r\n    const firstItemOfRange = 4 * currentPage - 3\r\n    const lastItemOfRange = firstItemOfRange + repos.length - 1\r\n\r\n    const onPageHandler = useCallback((item: { selected: number }) => {\r\n        if (currentPage !== item.selected + 1) {\r\n            dispatch(getData(userName, item.selected + 1, perPage))\r\n        }\r\n    }, [userName, currentPage, perPage, dispatch])\r\n\r\n    return (\r\n        <div className={style.repositoryBlock}>\r\n            {repos?.length ?\r\n                <>\r\n                    <h1 className={style.title}>Repositories ({reposCount})</h1>\r\n                    {isFetching ? <Loader/> : repos?.map((repo: RepoType) =>\r\n                        <Repository key={repo.id} description={repo.description} url={repo.html_url} name={repo.name}/>\r\n                    )}\r\n                    <div className={style.paginationBlock}>\r\n                        <span>{firstItemOfRange}-{lastItemOfRange} of {reposCount} items</span>\r\n                        <Pagination currentPage={currentPage} pageCount={pageCount} perPage={perPage}\r\n                                    onPageHandler={onPageHandler}/>\r\n                    </div>\r\n                </>\r\n                : <Empty text={'Repository list is empty'} icon={notFound}/>}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Repositories;","export default __webpack_public_path__ + \"static/media/bigSearch.5d641b04.svg\";","export default __webpack_public_path__ + \"static/media/userOutline.8fe7b3bb.svg\";","import React from 'react';\r\nimport style from './Main.module.scss'\r\nimport User from './user/User';\r\nimport Repositories from './repositories/Repositories';\r\nimport {useSelector} from 'react-redux';\r\nimport Empty from '../../common/components/empty/Empty';\r\nimport search from './../../assets/icons/bigSearch.svg'\r\nimport userNotFound from './../../assets/icons/userOutline.svg'\r\nimport {selectError, selectUser} from '../../Redux/selectors';\r\n\r\nconst Main = () => {\r\n    const user = useSelector(selectUser)\r\n    const error = useSelector(selectError)\r\n\r\n    if (error) {\r\n        return <Empty text={'User not found'} icon={userNotFound}/>\r\n    }\r\n    if (user === null) {\r\n        return <Empty text={`Start with searching a GitHub user`} icon={search}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.mainBlock}>\r\n                <User photo={user.avatar_url}\r\n                      name={user.name}\r\n                      url={user.html_url}\r\n                      userName={user.login}\r\n                      followers={user.followers}\r\n                      following={user.following}/>\r\n                <Repositories userName={user.login} reposCount={user.public_repos}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Header from './components/header/Header';\nimport Main from './components/main/Main';\n\nconst App = () => {\n    return (\n        <>\n            <Header/>\n            <Main/>\n        </>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport reducer from './reducer';\r\n\r\n\r\nexport type RootReducerType = typeof rootReducer\r\nexport type AppRootStateType = ReturnType<RootReducerType>\r\n\r\nlet rootReducer = combineReducers({\r\n    user: reducer,\r\n})\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__1FYov\",\"userPhoto\":\"User_userPhoto__2Gl3j\",\"name\":\"User_name__1SsLc\",\"userName\":\"User_userName__2vJE5\",\"userFollow\":\"User_userFollow__2AvSk\",\"followers\":\"User_followers__2ZBsF\",\"following\":\"User_following__2XnNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationContainer\":\"Pagination_paginationContainer__2Obr1\",\"prevBtn\":\"Pagination_prevBtn__3uBt9\",\"nextBtn\":\"Pagination_nextBtn__1Geka\",\"breakBtn\":\"Pagination_breakBtn__3fW-B\",\"pageBtn\":\"Pagination_pageBtn__RosCH\",\"active\":\"Pagination_active__1xZkY\"};"],"sourceRoot":""}